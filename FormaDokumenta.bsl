&НаСервере
Функция ПолучитьПользователя()
	Возврат Пользователи.ТекущийПользователь();
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	         
	Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда
	Объект.Ответственный = ПолучитьПользователя();      
	КонецЕсли;
	
	
	Количество = Объект.Услуги.Итог("Количество");
	Объект.КоличествоУслуг = Объект.Услуги.Итог("Количество");
КонецПроцедуры  
 
 


//Считаем сумму при изменении количества Соколов 03.10.2024
&НаКлиенте 
Процедура УслугиКоличествоПриИзменении(Элемент)  
	
	//УслугиКоличествоПриИзмененииНаСервере(); 
	ТекущаяСтрока = Элементы.Услуги.ТекущиеДанные;
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;   //Считаем сумму при изменении количества
		
	Объект.Сумма = Объект.Услуги.Итог("Сумма"); 
	Количество = Объект.Услуги.Итог("Количество");
	
	
КонецПроцедуры


 //Считаем сумму при изменении цены Соколов 03.10.2024
&НаСервере
Процедура УслугиЦенаПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент) 
	
	//УслугиЦенаПриИзмененииНаСервере();
	ТекущаяСтрока = Элементы.Услуги.ТекущиеДанные;
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;     //Считаем сумму при изменении цены
	Объект.Сумма = Объект.Услуги.Итог("Сумма"); 
	Количество = Объект.Услуги.Итог("Количество");
	Прибавить = ТекущаяСтрока.Цена; 
	
КонецПроцедуры

//При изменении в ячейке в подвале меняем цену в табличной части и Рассчитываем сумму как количество*цену Соколов 03.10.2024
&НаСервере
Процедура ПрибавитьПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПрибавитьПриИзменении1(Элемент)   
	
	ПрибавитьПриИзмененииНаСервере();  
	ТекущаяСтрока = Элементы.Услуги.ТекущиеДанные; 
	ТекущаяСтрока.Цена = Прибавить;                                          //При изменении в ячейке в подвале меняем цену в табличной части
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;     //Рассчитываем сумму как количество*цену
	Прибавить = ТекущаяСтрока.Цена; 
	
	
КонецПроцедуры

 //Каждый раз когда пользователь нажимает на строку табличной части Изменяется ячейка в подвале Соколов 03.10.2024
&НаКлиенте
Процедура УслугиПриАктивизацииСтроки(Элемент)  

	Если НЕ ЗначениеЗаполнено(Объект.Услуги) Тогда                 //Проверяем что есть табличная часть
	Иначе
			ТекущаяСтрока = Элементы.Услуги.ТекущиеДанные;         //Каждый раз когда пользователь нажимает на строку табличной части 
			Прибавить = ТекущаяСтрока.Цена;	                       //Изменяется ячейка в подвале
	КонецЕсли;	
 
КонецПроцедуры






&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	// Вставить содержимое обработчика. 
	ТекущаяСтрока = Элементы.Услуги.ТекущиеДанные;
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;     //?
	ТекущаяСтрока.Сумма = Объект.Сумма;
	ТекущаяСтрока.Цена = Объект.Сумма;
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
КонецПроцедуры

// ++++ Соколов 03.10.24

// ++++ Гартман Е._03.10.24 Создание документа оплаты при нажатии на кнопку Оплата_Начало
&НаКлиенте
Процедура Оплата(Команда)
	ВыбратьСпособОплаты();		
КонецПроцедуры 

&НаКлиенте
Процедура ВыбратьСпособОплаты()
	
	// Выбор способа оплаты
	СпособОплаты = Новый СписокЗначений;
	СпособОплаты.Добавить(ПредопределенноеЗначение("Перечисление.СпособыОплаты.ОплатаБанковскойКартой"), "Оплата банковской картой");
	СпособОплаты.Добавить(ПредопределенноеЗначение("Перечисление.СпособыОплаты.НаличныйРасчет"), "Наличный расчет");
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ВыборСпособаОплатыЗавершение", ЭтотОбъект), СпособОплаты, Новый Структура("Заголовок", "Выберите способ оплаты"));

КонецПроцедуры   


&НаКлиенте
Процедура ВыборСпособаОплатыЗавершение(ВыбранныйСпособ, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйСпособ = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    СсылкаНаДокумент = СоздатьДокументОплатыНаСервере(ВыбранныйСпособ.Значение);
    
    Если ЗначениеЗаполнено(СсылкаНаДокумент) Тогда
        ПараметрыФормы = Новый Структура("Ключ", СсылкаНаДокумент);
        ОткрытьФорму("Документ.ПоступлениеДенежныхСредств.ФормаОбъекта", ПараметрыФормы);
    КонецЕсли;

КонецПроцедуры


&НаСервере
Функция СоздатьДокументОплатыНаСервере(СпособОплаты)
	
	//Создание документа ПоступлениеДенежныхСредств
	ДокументОплаты = Документы.ПоступлениеДенежныхСредств.СоздатьДокумент();
	ДокументОплаты.Дата = ТекущаяДатаСеанса();
	ДокументОплаты.Операция = Перечисления.ВидыОпераций.ОплатаОтКлиента;
	ДокументОплаты.СпособОплаты = СпособОплаты;
	ДокументОплаты.Основание = Объект.Ссылка;
	ДокументОплаты.Сумма = Объект.Сумма;
	ДокументОплаты.Контрагент = Объект.Клиент;
	ДокументОплаты.Ответственный = ПолучитьПользователя(); 
	
	ДокументОплаты.Записать(РежимЗаписиДокумента.Проведение);
	
	// Установка статуса оплаты в документе Продажа
	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	ДокументОбъект.СтатусОплаты = Истина;
	ДокументОбъект.Записать();
	
	// Обновление формы
	Прочитать(); 
	
	Возврат ДокументОплаты.Ссылка;
	
КонецФункции 


// ++++ Гартман Е._03.10.24 Создание документа оплаты при нажатии на кнопку Оплата_Конец    


// ++++ Соколов П. 05.10.2024 - 06.10.24 Автоматический выбор цены из прайс листа при изменении номенклатуры (услуги) 

&НаСервере
Процедура УслугиНоменклатураПриИзмененииНаСервере()                           
	СкидкаПоПериодуПредоставления = 0;
	СкидкаПоКоличествуПосещений = 0;
	Скидка = 0;
	
	////  Получение персональной скидки 
	Запрос = Новый Запрос;                                                                  
	Запрос.Текст =                                                                          
	"ВЫБРАТЬ                                                                                
	|	ПерсональнаяСкидка.Клиент КАК Клиент,                                               
	|	ПерсональнаяСкидка.Скидка КАК Скидка,                                             
	|	ПерсональнаяСкидка.СчитаетсяПо КАК СчитаетсяПо,
	|	ПерсональнаяСкидка.ПериодПредоставления КАК ПериодПредоставления, 
	|	ПерсональнаяСкидка.Период КАК ДатаОформленияСкидки,
	|	ПерсональнаяСкидка.КоличествоПосещений КАК КоличествоПосещений
	|ИЗ
	|	РегистрСведений.ПерсональнаяСкидка КАК ПерсональнаяСкидка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();                   
	
	Пока Выборка.Следующий() Цикл                           
		
		// 1. Считаем скидку по дате действия (Скидка действует до истечения срока действия) 
		Если Выборка.СчитаетсяПо = Перечисления.СкидкаСчитаетсяПо.ПериодПредоставления И ЭтотОбъект.Объект.Клиент = Выборка.Клиент И Выборка.ПериодПредоставления >= ЭтотОбъект.Объект.Дата И ЭтотОбъект.Объект.Дата >= Выборка.ДатаОформленияСкидки И Выборка.Скидка > Скидка Тогда                                                     
			СкидкаПоПериодуПредоставления = Выборка.Скидка;	
		КонецЕсли;		
		
		// 2. Считаем скидку если не превышено количество посещений (Скидка действует определённое количество раз)
		Если Выборка.СчитаетсяПо = Перечисления.СкидкаСчитаетсяПо.КоличествоПосещений И ЭтотОбъект.Объект.Клиент = Выборка.Клиент И Выборка.ДатаОформленияСкидки < Объект.Дата И Выборка.ДатаОформленияСкидки <> Объект.Дата Тогда              
			
			КоличествоПроведенныхДокументов = 0;                     
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Продажа.Ссылка КАК Ссылка,
			|	Продажа.Дата КАК Дата,
			|	Продажа.Проведен КАК Проведен,
			|	Продажа.Клиент КАК Клиент,
			|	Продажа.СтатусОплаты КАК СтатусОплаты
			|ИЗ
			|	Документ.Продажа КАК Продажа
			|ГДЕ 
			|	Проведен = Истина";
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаИзПродажи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаИзПродажи.Следующий() Цикл                                                                     //
				Если ВыборкаИзПродажи.Клиент = ЭтотОбъект.Объект.Клиент И ВыборкаИзПродажи.Проведен = Истина Тогда     //
					КоличествоПроведенныхДокументов = КоличествоПроведенныхДокументов + 1;                             // Расчет количества проведенных документов
				КонецЕсли;                                                                                             //
			КонецЦикла;                                                                                                //
			
			
			Если Выборка.КоличествоПосещений >= КоличествоПроведенныхДокументов И Выборка.Скидка > СкидкаПоКоличествуПосещений Тогда	 //
				СкидкаПоКоличествуПосещений = Выборка.Скидка;                                                                            // Поиск максимальной скидки
			КонецЕсли;                                                                                                                   // 	
		КонецЕсли;                                                                                                                       	
	КонецЦикла;
	
	
	//// Получение прайс листа
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрайсЛистСрезПоследних.Период КАК Период,
	|	ПрайсЛистСрезПоследних.Регистратор КАК Регистратор,
	|	ПрайсЛистСрезПоследних.Активность КАК Активность,
	|	ПрайсЛистСрезПоследних.Услуга КАК Услуга,
	|	ПрайсЛистСрезПоследних.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ПрайсЛист.СрезПоследних(&Дата, ) КАК ПрайсЛистСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл	
		Если ТекущаяНоменклатура = Выборка.Услуга Тогда  
			ЦенаПрайсЛиста = Выборка.Цена; 
		КонецЕсли;		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиНоменклатураПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Услуги.ТекущиеДанные; 
	ТекущаяНоменклатура = ТекущаяСтрока.Номенклатура;
	СкидкаПоПериодуПредоставления = 0;
	СкидкаПоКоличествуПосещений = 0;
	Скидка = 0; 
	ЦенаПрайсЛиста = 0;
	
	УслугиНоменклатураПриИзмененииНаСервере();
	 
	Сообщить("Скидка по периоду предоставления = " + СкидкаПоПериодуПредоставления + "%, Скидка по количеству посещений = " + СкидкаПоКоличествуПосещений + "%");
	Если СкидкаПоПериодуПредоставления > СкидкаПоКоличествуПосещений Тогда
		Скидка = СкидкаПоПериодуПредоставления;
	Иначе
		Скидка = СкидкаПоКоличествуПосещений;
	КонецЕсли; 
	
	Сообщить("Применена скидка: " + Скидка + "%");
	
	ТекущаяСтрока.Цена = ЦенаПрайсЛиста * (1 - (Скидка / 100));
	//ТекущаяСтрока.Цена = ПроцентСкидки;
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;  
	Объект.Сумма = Объект.Услуги.Итог("Сумма");
	Прибавить = ТекущаяСтрока.Цена; 
	
	

		
КонецПроцедуры

// ++++ Соколов П. 05.10.2024 - 06.10.24 Автоматический выбор цены из прайс листа при изменении номенклатуры (услуги)

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Вставить содержимое обработчика.   
	//Переменная = Объект.Основание.Ссылка.Статус;
	//Сообщить(Переменная);
	//Объект.Основание.Ссылка.Статус = Перечисления.СтатусыЗаявок.Исполнена;    
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// Вставить содержимое обработчика.   
	//Объект.Основание.Ссылка.Статус = Перечисления.СтатусыЗаявок.Исполнена;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПослеЗаписиНаСервере1()
	// Вставить содержимое обработчика. 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПослеЗаписиНаСервере1();   
	           

КонецПроцедуры


&НаКлиенте
Процедура УслугиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	  
	Если Объект.Услуги.Количество() > 0 Тогда
		
		ТекущаяСтрока = Элементы.Услуги.ТекущиеДанные; 
		
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			Сообщить("Введите поле номенклатура"); 
			Отказ = Истина;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Сотрудник) Тогда
			Сообщить("Введите поле сотрудник");
			Отказ = Истина;
		КонецЕсли;  
		
		Если ТекущаяСтрока.Количество = 0 Тогда
			Сообщить("Введите количество услуг"); 
			Отказ = Истина;
		КонецЕсли; 
		
		Если ТекущаяСтрока.Цена = 0 И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			Сообщить("На " + Объект.Дата + " не действует ни один Прайс-Лист. Заполните Прайс-лист на вкладке Учёт продаж >>> Прайс лист"); 
			Отказ = Истина;
		КонецЕсли;

		
	КонецЕсли;
КонецПроцедуры
